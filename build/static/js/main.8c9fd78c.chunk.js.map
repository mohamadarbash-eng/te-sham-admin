{"version":3,"sources":["app/dashboard/dashboard.module.scss","app/courses/all-courses/all-courses.module.scss","app/diplomas/all-diplomas/all-diplomas.module.scss","app/components/input/input.tsx","app/components/image/select-image.tsx","app/components/text-editor/text-rich-editor.tsx","app/core.mod/vaidators/validators.tsx","app/core.mod/vaidators/validators-control.tsx","app/core.mod/vaidators/new-course-controls.tsx","app/courses/abstract-course-details.tsx","app/core.mod/proxy-service/proxy-service.tsx","app/courses/new-course/new-course.tsx","app/courses/all-courses/all-courses.tsx","app/courses/edit-course/edit-course.tsx","app/core.mod/vaidators/new-diploma-controls.tsx","app/diplomas/abstract-diploma-details.tsx","app/diplomas/new-diploma/new-diploma.tsx","app/diplomas/all-diplomas/all-diplomas.tsx","app/diplomas/edit-diploma/edit-diploma.tsx","app/core.mod/error-handler/error-page.tsx","app/main/homepage.tsx","app/main/main.tsx","app/dashboard/dashboard.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","teAppMain","image","Input","props","error","react_default","a","createElement","className","config","valid","value","message","Object","assign","input","touched","onChange","changed","htmlFor","id","inputLabel","SelectImage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","instance","imagesLink","state","images","elem","document","querySelector","M","Modal","init","close","e","preventDefault","stopPropagation","Axios","get","data","map","key","onClick","_this2","onSelectImage","name","style","maxHeight","minHeight","alt","src","setState","open","_this3","button","onClickOpenModal","buttonLabel","Component","TextRichEditor","editorState","EditorState","createEmpty","onEditorStateChange","html","stateToHTML","getCurrentContent","prevProps","prevState","snapshot","htmlText","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","wrapperClassName","editorClassName","formControlsValidator","formControls","formValid","subForm","_key","validatorsControl","rules","isValid","minLength","_value","trim","length","minLengthValidator","NEW_COURSE_CONTROLS","courseName","type","title","category","shortDescription","imageAlt","imageTitle","imageUrl","hidden","price","courseDetails","courseDescription","textEditor","editorHeader","curriculum","medias","AbstractCourseDetails","_objectSpread","cloneDeep","previewImage","saveButtonLabel","pageTitle","isDeletable","updateTextFields","formData","control","undefined","defineProperty","spreadSubForm","formControl","event","files","target","FormData","fileReader","FileReader","append","post","then","imageName","onloadend","maxWidth","width","result","readAsDataURL","Materialbox","_this4","handleChangeFormControls","subControl","_this5","updatedControls","updatedFormElement","_this6","_this7","deleteElement","deleteCourse","input_Input","handleChangeText","select_image_SelectImage","deletePreviewImage","text_rich_editor_TextRichEditor","handleChangeSubFormControls","disabled","saveCourse","API_PATH","NewCourse","mapCourseData","history","push","AllCourses","_ref","courses","course","styles","react_router_dom","to","React","EditCourse","courseID","match","params","item","subCourseItem","edit_course_objectSpread","spreadData","console","log","catch","nestedData","nestedItem","put","delete","NEW_DIPLOMA_CONTROLS","diplomaName","diplomaDetails","diplomaDescription","AbstractDiplomaDetails","abstract_diploma_details_objectSpread","NewDiploma","AllDiplomas","diplomas","diploma","EditDiploma","diplomaID","edit_diploma_objectSpread","ErrorPage","Homepage","Main","react_router","path","exact","component","Dashboard","_React$Component","_getPrototypeOf2","_len","arguments","args","Array","apply","concat","inherits","createClass","sidenav","querySelectorAll","Sidenav","Styles","href","main_Main","App","dashboard_Dashboard","Boolean","window","location","hostname","defaults","baseURL","ReactDOM","render","src_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,mDCAlBF,EAAAC,QAAA,CAAkBE,MAAA,iDCAlBH,EAAAC,QAAA,CAAkBE,MAAA,gUCGLC,EAAuB,SAACC,GACjC,IAAMC,EACFC,EAAAC,EAAAC,cAAA,QAAOC,UAAWL,EAAMM,OAAOC,QAAUP,EAAMM,OAAOC,MAAMC,MAAO,UAAY,YAClER,EAAMM,OAAOC,MAAME,SACpC,OACQP,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAMM,OAAOD,WACzBH,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GACQX,EAAMM,OAAOM,MADrB,CAEIP,UAAWL,EAAMM,OAAOC,QAAUP,EAAMM,OAAOC,MAAMC,OAASR,EAAMM,OAAOO,QAAU,UAAY,WACjGC,SAAUd,EAAMe,QAChBP,MAAOR,EAAMM,OAAOE,SACxBN,EAAAC,EAAAC,cAAA,SAAOY,QAAShB,EAAMM,OAAOM,MAAMK,IAAKjB,EAAMM,OAAOY,YACpDjB,+BCJIkB,cAKjB,SAAAA,EAAYnB,GAAY,IAAAoB,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAAH,IACpBC,EAAAV,OAAAa,EAAA,EAAAb,CAAAY,KAAAZ,OAAAc,EAAA,EAAAd,CAAAS,GAAAM,KAAAH,KAAMtB,KALH0B,cAIiB,EAAAN,EAHjBO,WAA0C,GAGzBP,EAFjBQ,WAEiB,EAEpBR,EAAKQ,MAAQ,CACTC,OAAQ,IAHQT,mFAQpB,IAAMU,EAAuBC,SAASC,cAAc,UACpDV,KAAKI,SAAWO,EAAEC,MAAMC,KAAKL,yCAGZhC,GACjBwB,KAAKtB,MAAMe,QAAQjB,GACnBwB,KAAKI,SAASU,yFAGYC,2FAC1BA,EAAEC,iBACFD,EAAEE,2BACmBC,IAAMC,IAAI,mCAAxBC,SACPpB,KAAKK,WAAae,GAAQA,EAAKf,WACzBE,EAASP,KAAKK,WAAWgB,IAAI,SAAC7C,GAChC,OAAOI,EAAAC,EAAAC,cAAA,OACHwC,IAAK9C,EAAMmB,GACX4B,QAAS,kBAAMC,EAAKC,cAAcjD,EAAMkD,OACxCC,MAAO,CAAEC,UAAW,QAASC,UAAW,SACxC9C,UAAU,gBACV+C,IAAKtD,EAAMkD,KACXK,IAAK,uCAAyCvD,EAAMkD,SAE5D1B,KAAKgC,SAAS,WACV,MAAO,CACHzB,YAGRP,KAAKI,SAAS6B,4IAGQ,IAAAC,EAAAlC,KACtB,OACIpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAAM,OAAAC,OAAA,GACQW,KAAKtB,MAAMM,OAAOmD,OAD1B,CAEIZ,QAAS,SAACR,GAAD,OAAYmB,EAAKE,iBAAiBrB,IAC5ChC,UAAWiB,KAAKtB,MAAMM,OAAOD,YAE3BiB,KAAKtB,MAAMM,OAAOqD,aAGvBzD,EAAAC,EAAAC,cAAA,OAAKa,GAAG,SAASZ,UAAU,SACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACViB,KAAKM,MAAMC,kBA1DH+B,yECHpBC,6MACVjC,MAAQ,CAACkC,YAAaC,cAAYC,iBAelCC,oBAA2B,SAACH,GAC/B,IAAMI,EAAOC,YAAYL,EAAYM,qBACrChD,EAAKpB,MAAMe,QAAQmD,GACnB9C,EAAKkC,SAAS,CACVQ,mGAjBWO,EAA0BC,EAAyBC,GAClE,GAAIF,EAAUG,WAAalD,KAAKtB,MAAMwE,SAAU,CAC5C,IAAMC,EAAeC,IAAYpD,KAAKtB,MAAMwE,UAC5C,GAAIC,GAAkBnD,KAAKtB,MAAMwE,SAAU,CACvC,IAAMG,EAAeC,eAAaC,qBAAqBJ,EAAaK,eAC9DhB,EAAcC,cAAYgB,kBAAkBJ,GAClDrD,KAAKgC,SAAS,CACVQ,mDAc4J,IAAAhB,EAAAxB,KACjKwC,EAAexC,KAAKM,MAApBkC,YACP,OACI5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAC4E,EAAA,OAAD,CACIlB,YAAaA,EACbmB,iBAAiB,gBACjBC,gBAAgB,eAChBjB,oBAAqB,SAACH,GAAD,OAAiBhB,EAAKmB,oBAAoBH,cAhCvCF,aCFrC,SAASuB,EAAsBC,GAClC,IAAIC,GAAY,EAChB,IAAI,IAAMzC,KAAOwC,EAAc,CAC3B,GAAKA,EAAaxC,GAAKpC,MAEhB,CACH,IAAM8E,EAAUF,EAAaxC,GAC7B,IAAK,IAAM2C,KAAQD,EACXA,EAAQC,GAAM/E,QACd6E,EAAYA,GAAaG,EAAkBF,EAAQC,GAAM/E,MAAO8E,EAAQC,GAAME,OAAOjF,YAL7F6E,EAAYA,GAAaG,EAAkBJ,EAAaxC,GAAKpC,MAAO4E,EAAaxC,GAAK6C,OAAOjF,MASjG,IAAI6E,EACA,MAGR,OAAOA,ECtBJ,SAASG,EAAkBhF,EAAeiF,GAC7C,IAAIC,GAAU,EACVnF,EAAQ,CACRC,OAAO,EACPC,QAAS,IAab,OAVIgF,GAASA,EAAME,WAAaD,KAC5BA,EDRD,SAA4BlF,EAAemF,GAC9C,IAAMC,EAASpF,EAAMqF,OACrB,QAAUD,GAAWA,EAAOE,QAAUH,ECMxBI,CAAmBvF,EAAOiF,EAAME,UAAUnF,UAEhDD,EAAQ,CACJC,MAAOkF,EACPjF,QAASgF,EAAME,UAAUlF,WAK9BF,ECnBJ,IAAOyF,EAAsB,CAChCC,WAAY,CACRrF,MAAO,CACHK,GAAI,aACJiF,KAAM,OACNlD,KAAM,cAEV3C,UAAW,4BACXa,WAAY,cACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAIjB0F,MAAO,CACHvF,MAAO,CACHK,GAAI,QACJiF,KAAM,OACNlD,KAAM,SAEV3C,UAAW,4BACXa,WAAY,QACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB2F,SAAU,CACNxF,MAAO,CACHK,GAAI,WACJiF,KAAM,OACNlD,KAAM,YAEV3C,UAAW,4BACXa,WAAY,WACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB4F,iBAAkB,CACdzF,MAAO,CACHK,GAAI,mBACJiF,KAAM,OACNlD,KAAM,oBAEV3C,UAAW,4BACXa,WAAY,oBACZV,MAAO,YACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB6F,SAAU,CACN1F,MAAO,CACHK,GAAI,WACJiF,KAAM,OACNlD,KAAM,YAEV3C,UAAW,4BACXa,WAAY,YACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB8F,WAAY,CACR3F,MAAO,CACHK,GAAI,aACJiF,KAAM,OACNlD,KAAM,cAEV3C,UAAW,4BACXa,WAAY,cACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB+F,SAAU,CACN/C,OAAQ,CACJxC,GAAI,WACJiF,KAAM,SACNlD,KAAM,WACNyD,QAAQ,GAEZpG,UAAW,6CACXsD,YAAa,eACbnD,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBiG,MAAO,CACH9F,MAAO,CACHK,GAAI,QACJiF,KAAM,OACNlD,KAAM,SAEV3C,UAAW,4BACXa,WAAY,QACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBkG,cAAe,CACXC,kBAAmB,CACfC,WAAY,CACR5F,GAAI,oBACJiF,KAAM,OACNlD,KAAM,qBAEV3C,UAAW,4BACXyG,aAAc,qBACdtG,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBsG,WAAY,CACRF,WAAY,CACR5F,GAAI,oBACJiF,KAAM,OACNlD,KAAM,qBAEV3C,UAAW,4BACXyG,aAAc,qBACdtG,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBuG,OAAQ,CACJH,WAAY,CACR5F,GAAI,oBACJiF,KAAM,OACNlD,KAAM,qBAEV3C,UAAW,4BACXyG,aAAc,qBACdtG,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,skBCjMKwG,6MACnBrF,MAAa,CAChBwD,aAAY8B,EAAA,GACLC,oBAAUnB,IAEjBX,WAAW,EACX+B,aAAc,KACdZ,SAAU,KACVa,gBAAiB,KACjBC,UAAW,KACXC,aAAa,KAEV7F,mGAYHO,EAAEuF,2DAIF,IAAIC,EAAsC,GACnCrC,EAAgB9D,KAAKM,MAArBwD,aACP,IAAK,IAAMsC,KAAWtC,OACkBuC,IAAhCvC,EAAasC,GAASlH,MACtBiH,EAASC,GAAWtC,EAAasC,GAASlH,MAE1CiH,EAAQP,EAAA,GACDO,EADC/G,OAAAkH,EAAA,EAAAlH,CAAA,GAEHgH,EAFGR,EAAA,GAGG5F,KAAKuG,cAAczC,EAAasC,OAKnD,OAAOD,wCAIUK,GACjB,IAAIL,EAAsC,GAC1C,IAAK,IAAMC,KAAWI,OACiBH,IAA/BG,EAAYJ,GAASlH,QACrBiH,EAASC,GAAWI,EAAYJ,GAASlH,OAGjD,OAAOiH,4CAGcM,GAAY,IAAAjF,EAAAxB,KAC3B0G,EAAQD,EAAME,OAAOD,MACrBP,EAAqB,IAAIS,SACzBC,EAAa,IAAIC,WAEvBX,EAASY,OAAO,QAASL,EAAM,IAC/BxF,IAAM8F,KAAK,aAAcb,GAAUc,KAAK,SAAC7F,GACrCI,EAAKQ,SAAS,WACV,MAAO,CACH8B,aAAY8B,EAAA,GACLpE,EAAKlB,MAAMwD,aADN,CAERoB,SAAQU,EAAA,GACDpE,EAAKlB,MAAMwD,aAAaoB,SADvB,CAEJhG,MAAOkC,EAAKA,KAAK8F,mBAOrCL,EAAWM,UAAY,WACnB3F,EAAKQ,SAAS,CACV8D,aACIlH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACX4C,MAAO,CAACyF,SAAU,OAAQxF,UAAW,QAASyF,MAAO,QACrDtF,IAAK8E,EAAWS,OAAkBxF,IAAI,UAK/D+E,EAAWU,cAAcb,EAAM,0CAKdlI,GAAqB,IAAA0D,EAAAlC,KACtCA,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAY8B,EAAA,GACL1D,EAAK5B,MAAMwD,aADN,CAERoB,SAAQU,EAAA,GACD1D,EAAK5B,MAAMwD,aAAaoB,SADvB,CAEJhG,MAAOV,MAGfsH,aAActH,IAGnB,WACC,IAAMgC,EAAOC,SAASC,cAAc,kBACpCwB,EAAK9B,SAAWO,EAAE6G,YAAY3G,KAAKL,kDAKf,IAAAiH,EAAAzH,KACxBA,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAY8B,EAAA,GACL6B,EAAKnH,MAAMwD,aADN,CAERoB,SAAQU,EAAA,GACD6B,EAAKnH,MAAMwD,aAAaoB,SADvB,CAEJhG,MAAO,SAGf4G,aAAc,iDAMFW,GACpB,IAAM/E,EAAO+E,EAAME,OAAOjF,KACpBxC,EAAQuH,EAAME,OAAOzH,MAC3Bc,KAAK0H,yBAAyBhG,EAAMxC,uDAGLwC,EAAcxC,EAAeyI,GAAoB,IAAAC,EAAA5H,KAC1E6H,EAAoBjC,EAAA,GACnB5F,KAAKM,MAAMwD,aAAa6D,IAGzBG,EAAkBlC,EAAA,GACjBiC,EAAgBnG,IAEvBoG,EAAmB5I,MAAQA,EAC3B4I,EAAmBvI,SAAU,EAC7BuI,EAAmB7I,MAAQiF,EAAkBhF,EAAO2I,EAAgBnG,GAAMyC,OAC1E0D,EAAgBnG,GAAQoG,EAGxB9H,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAY8B,EAAA,GACLgC,EAAKtH,MAAMwD,aADN1E,OAAAkH,EAAA,EAAAlH,CAAA,GAEPuI,EAFO/B,EAAA,GAGDiC,OAKhB,WACC,IAAM9D,EAAYF,EAAsB+D,EAAKtH,MAAMwD,cACnD8D,EAAK5F,SAAS,CACV+B,iEAMoBrC,EAAcxC,GAAe,IAAA6I,EAAA/H,KACnD6H,EAAoBjC,EAAA,GACnB5F,KAAKM,MAAMwD,cAGZgE,EAAkBlC,EAAA,GACjBiC,EAAgBnG,IAEvBoG,EAAmB5I,MAAQA,EAC3B4I,EAAmBvI,SAAU,EAE7BsI,EAAgBnG,GAAQoG,EACxBD,EAAgBnG,GAAMzC,MAAQiF,EAAkBhF,EAAO2I,EAAgBnG,GAAMyC,OAE7EnE,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAc+D,IAEnB,WACC,IAAM9D,EAAYF,EAAsBkE,EAAKzH,MAAMwD,cACnDiE,EAAK/F,SAAS,CACV+B,iDAKc,IAAAiE,EAAAhI,KAClB8F,OAAeO,EACfrG,KAAKM,MAAMwD,aAAaoB,SAAShG,QACjC4G,EAAelH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAC1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,gBACVwC,QAAS,kBAAMyG,EAAK5H,SAAS6B,QAC7BN,MAAO,CAACyF,SAAU,OAAQxF,UAAW,QAASyF,MAAO,QACrDtF,IAAK,uCAAyC/B,KAAKM,MAAMwD,aAAaoB,SAAShG,MAC/E4C,IAAK9B,KAAKM,MAAMwF,kBAIhC,IAAMmC,EAAgBjI,KAAKM,MAAM2F,aAC7BrH,EAAAC,EAAAC,cAAA,KAAGyC,QAAS,kBAAKyG,EAAKE,gBAAgBnJ,UAAW,yDAAyDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBAC9G,OACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASiB,KAAKM,MAAM0F,WACjCiC,GAELrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAaa,WAChClF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,MACtD7H,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAae,MAChCpF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,MACtD7H,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAagB,SAChCrF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,OAE1D7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAakB,SAChCvF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,MACtD7H,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAamB,WAChCxF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,OAE1D7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACuJ,EAAD,CAAarJ,OAAQgB,KAAKM,MAAMwD,aAAaoB,SAChCzF,QAAS,SAACjB,GAAD,OAAWwJ,EAAKvG,cAAcjD,OAIxDI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMwC,QAAS,kBAAMyG,EAAKM,uBAA5C,kBAGPxC,EACDlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAasB,MAChC3F,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,OAE1D7H,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyJ,EAAD,CACIrF,SAAUlD,KAAKM,MAAMwD,aAAauB,cAAcC,kBAAkBpG,MAClEO,QAAS,SAACgH,GACNuB,EAAKQ,4BAA4B,oBAAqB/B,EAAO,qBAKzE7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACyJ,EAAD,CACIrF,SAAUlD,KAAKM,MAAMwD,aAAauB,cAAcI,WAAWvG,MAC3DO,QAAS,SAACgH,GACNuB,EAAKQ,4BAA4B,aAAc/B,EAAO,qBAIlE7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAM0J,UAAWzI,KAAKM,MAAMyD,UAAWxC,QAAS,kBAAMyG,EAAKU,eACxE1I,KAAKM,MAAMyF,0BA3QwBzD,aCb/CqG,EACA,eADAA,EAIC,gBAJDA,EAKO,uBALPA,EAMF,kBANEA,EAOG,cAPHA,EAQI,eARJA,EASK,wBCLGC,8LAGb5I,KAAKgC,SAAS,CACV+D,gBAAiB,OAAQC,UAAW,oBAAqBC,aAAa,yCAIpD,IAAAnG,EAAAE,KACtBkB,IAAM8F,KAAK2B,EAAqB3I,KAAK6I,iBAAiB5B,KAAK,SAAC7F,GACvDtB,EAAKpB,MAAcoK,QAAQC,KAAK,iEAVNpD,6BCClBqD,6MACV1I,MAAmC,sFAEhB,IAAAkB,EAAAxB,KACtBkB,IAAMC,IAAIwH,GACL1B,KAAK,SAAAgC,GAAY,IACVC,EADA9H,EAAU6H,EAAV7H,KAEAA,IACA8H,EAAU9H,EAAK8H,QAAQ7H,IAAI,SAAC8H,GACxB,OACIvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAauC,IAAK6H,EAAOxJ,IACpCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAYqK,IAAO5K,MAAOuD,IFN9C,wBEM+D4G,EAAiBQ,EAAOjE,SAAUpD,IAAKqH,EAAOnE,WAC9FpG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcoK,EAAOtE,OACrCjG,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAI,gBAAkBH,EAAOxE,WAC7B5F,UAAU,yDAAwDH,EAAAC,EAAAC,cAAA,KACpEC,UAAU,kBAD0D,iBAG5EH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAIqK,EAAOpE,wBAOnCvD,EAAKQ,SAAS,CAACkH,+CAMvB,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACViB,KAAKM,MAAM4I,iBApCQK,IAAMjH,kkBCCzBkH,6MACVC,SAAmB,sFAGA,IAAAjI,EAAAxB,KACtBA,KAAKgC,SAAS,CACV+D,gBAAiB,SACjBC,UAAW,cACXC,aAAa,IAEjB/E,IAAMC,IAAKwH,EAA2B3I,KAAKtB,MAAcgL,MAAMC,OAAOhF,YAAYsC,KAAK,SAAAgC,GAAY,IAAV7H,EAAU6H,EAAV7H,KACrF,GAAIA,EAAM,CACNI,EAAKiI,SAAWrI,EAAKzB,GAErB,IAAImE,EAAe+B,oBAAUrE,EAAKlB,MAAMwD,cACxC,IAAK,IAAM8F,KAAQxI,EACf,GAAMA,EAAKwI,IAA+B,kBAAfxI,EAAKwI,GAAoB,CAChD,IAAMC,EAAgBhE,oBAAUzE,EAAKwI,IACrC9F,EAAYgG,EAAA,GACLhG,EADK1E,OAAAkH,EAAA,EAAAlH,CAAA,GAEPwK,EAFOE,EAAA,GAGDtI,EAAKuI,WAAWjG,EAAa8F,GAAOC,WAI/C,IAAK,IAAMzD,KAAWtC,EACdA,EAAa8F,SAAsCvD,IAA7BvC,EAAa8F,GAAM1K,OAAuBkH,IAChEtC,EAAa8F,GAAM1K,MAAQkC,EAAKwI,IAKhDpI,EAAKQ,SAAS,CACV8B,aAAcA,SAIlBkG,QAAQC,IAAI,WAEbC,MAAM,SAACnJ,GACTS,EAAK9C,MAAcoK,QAAQC,KAAK,4DAItBhG,EAA0BC,EAAyBC,GAClEtC,EAAEuF,sDAGYM,EAAkB2D,GAChC,IAAK,IAAMC,KAAcD,EACjB3D,EAAY4D,SAAiD/D,IAAlCG,EAAY4D,GAAYlL,QAClDsH,EAAY4D,GAAoBlL,MAAQiL,EAAWC,IAG5D,OAAO5D,uCAGe,IAAAtE,EAAAlC,KAClBA,KAAKyJ,UACLvI,IAAMmJ,IAAI,eAAiBrK,KAAKyJ,SAAUzJ,KAAK6I,iBAAiB5B,KAAK,SAAC7F,GACjEc,EAAKxD,MAAcoK,QAAQC,KAAK,yDAKjB,IAAAtB,EAAAzH,KACpBA,KAAKyJ,UACLvI,IAAMoJ,OAAO,eAAiBtK,KAAKyJ,UAAUxC,KAAK,WAC7CQ,EAAK/I,MAAcoK,QAAQC,KAAK,yBApETpD,GCP1B4E,EAAuB,CACjCC,YAAa,CACTlL,MAAO,CACHK,GAAI,cACJiF,KAAM,OACNlD,KAAM,eAEV3C,UAAW,4BACXa,WAAY,eACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAIjB0F,MAAO,CACHvF,MAAO,CACHK,GAAI,QACJiF,KAAM,OACNlD,KAAM,SAEV3C,UAAW,4BACXa,WAAY,QACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB2F,SAAU,CACNxF,MAAO,CACHK,GAAI,WACJiF,KAAM,OACNlD,KAAM,YAEV3C,UAAW,4BACXa,WAAY,WACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB4F,iBAAkB,CACdzF,MAAO,CACHK,GAAI,mBACJiF,KAAM,OACNlD,KAAM,oBAEV3C,UAAW,4BACXa,WAAY,oBACZV,MAAO,YACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB6F,SAAU,CACN1F,MAAO,CACHK,GAAI,WACJiF,KAAM,OACNlD,KAAM,YAEV3C,UAAW,4BACXa,WAAY,YACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB8F,WAAY,CACR3F,MAAO,CACHK,GAAI,aACJiF,KAAM,OACNlD,KAAM,cAEV3C,UAAW,4BACXa,WAAY,cACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjB+F,SAAU,CACN/C,OAAQ,CACJxC,GAAI,WACJiF,KAAM,SACNlD,KAAM,WACNyD,QAAQ,GAEZpG,UAAW,6CACXsD,YAAa,eACbnD,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBiG,MAAO,CACH9F,MAAO,CACHK,GAAI,QACJiF,KAAM,OACNlD,KAAM,SAEV3C,UAAW,4BACXa,WAAY,QACZV,MAAO,GACPK,SAAS,EACT4E,MAAO,CACHE,UAAW,CACPnF,MAAO,EACPC,QAAS,SAGjBF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBsL,eAAgB,CACZC,mBAAoB,CAChBnF,WAAY,CACR5F,GAAI,qBACJiF,KAAM,OACNlD,KAAM,sBAEV3C,UAAW,4BACXyG,aAAc,qBACdtG,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBsG,WAAY,CACRF,WAAY,CACR5F,GAAI,qBACJiF,KAAM,OACNlD,KAAM,sBAEV3C,UAAW,4BACXyG,aAAc,qBACdtG,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,KAGjBuG,OAAQ,CACJH,WAAY,CACR5F,GAAI,qBACJiF,KAAM,OACNlD,KAAM,sBAEV3C,UAAW,4BACXyG,aAAc,qBACdtG,MAAO,GACPK,SAAS,EACT4E,MAAO,GACPlF,MAAO,CACHC,OAAO,EACPC,QAAS,8jBCjMKwL,6MACnBrK,MAAa,CAChBwD,aAAa8G,EAAA,GACN/E,oBAAU0E,IAEjBxG,WAAW,EACX+B,aAAc,KACdZ,SAAU,KACVa,gBAAiB,KACjBC,UAAW,QAER5F,mGAQHO,EAAEuF,2DAIF,IAAIC,EAAsC,GACnCrC,EAAgB9D,KAAKM,MAArBwD,aACP,IAAK,IAAMsC,KAAWtC,OACkBuC,IAAhCvC,EAAasC,GAASlH,MACtBiH,EAASC,GAAWtC,EAAasC,GAASlH,MAE1CiH,EAAQyE,EAAA,GACDzE,EADC/G,OAAAkH,EAAA,EAAAlH,CAAA,GAEHgH,EAFGwE,EAAA,GAGG5K,KAAKuG,cAAczC,EAAasC,OAKnD,OAAOD,wCAIUK,GACjB,IAAIL,EAAsC,GAC1C,IAAK,IAAMC,KAAWI,OACiBH,IAA/BG,EAAYJ,GAASlH,QACrBiH,EAASC,GAAWI,EAAYJ,GAASlH,OAGjD,OAAOiH,4CAGcM,GAAY,IAAAjF,EAAAxB,KAC3B0G,EAAQD,EAAME,OAAOD,MACrBP,EAAqB,IAAIS,SACzBC,EAAa,IAAIC,WAEvBX,EAASY,OAAO,QAASL,EAAM,IAC/BxF,IAAM8F,KAAK,aAAcb,GAAUc,KAAK,SAAC7F,GACrCI,EAAKQ,SAAS,WACV,MAAO,CACH8B,aAAa8G,EAAA,GACNpJ,EAAKlB,MAAMwD,aADN,CAERoB,SAAS0F,EAAA,GACFpJ,EAAKlB,MAAMwD,aAAaoB,SADvB,CAEJhG,MAAOkC,EAAKA,KAAK8F,mBAOrCL,EAAWM,UAAY,WACnB3F,EAAKQ,SAAS,CACV8D,aACIlH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACX4C,MAAO,CAACyF,SAAU,OAAQxF,UAAW,QAASyF,MAAO,QACrDtF,IAAK8E,EAAWS,OAAkBxF,IAAI,UAK/D+E,EAAWU,cAAcb,EAAM,0CAKdlI,GAAqB,IAAA0D,EAAAlC,KACtCA,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAa8G,EAAA,GACN1I,EAAK5B,MAAMwD,aADN,CAERoB,SAAS0F,EAAA,GACF1I,EAAK5B,MAAMwD,aAAaoB,SADvB,CAEJhG,MAAOV,MAGfsH,aAActH,IAGnB,WACC,IAAMgC,EAAOC,SAASC,cAAc,kBACpCwB,EAAK9B,SAAWO,EAAE6G,YAAY3G,KAAKL,kDAKf,IAAAiH,EAAAzH,KACxBA,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAa8G,EAAA,GACNnD,EAAKnH,MAAMwD,aADN,CAERoB,SAAS0F,EAAA,GACFnD,EAAKnH,MAAMwD,aAAaoB,SADvB,CAEJhG,MAAO,SAGf4G,aAAc,iDAMFW,GACpB,IAAM/E,EAAO+E,EAAME,OAAOjF,KACpBxC,EAAQuH,EAAME,OAAOzH,MAC3Bc,KAAK0H,yBAAyBhG,EAAMxC,uDAGLwC,EAAcxC,EAAeyI,GAAoB,IAAAC,EAAA5H,KAC1E6H,EAAoB+C,EAAA,GACnB5K,KAAKM,MAAMwD,aAAa6D,IAGzBG,EAAkB8C,EAAA,GACjB/C,EAAgBnG,IAEvBoG,EAAmB5I,MAAQA,EAC3B4I,EAAmBvI,SAAU,EAC7BuI,EAAmB7I,MAAQiF,EAAkBhF,EAAO2I,EAAgBnG,GAAMyC,OAC1E0D,EAAgBnG,GAAQoG,EAGxB9H,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAa8G,EAAA,GACNhD,EAAKtH,MAAMwD,aADN1E,OAAAkH,EAAA,EAAAlH,CAAA,GAEPuI,EAFOiD,EAAA,GAGD/C,OAKhB,WACC,IAAM9D,EAAYF,EAAsB+D,EAAKtH,MAAMwD,cACnD8D,EAAK5F,SAAS,CACV+B,iEAMoBrC,EAAcxC,GAAe,IAAA6I,EAAA/H,KACnD6H,EAAoB+C,EAAA,GACnB5K,KAAKM,MAAMwD,cAGZgE,EAAkB8C,EAAA,GACjB/C,EAAgBnG,IAEvBoG,EAAmB5I,MAAQA,EAC3B4I,EAAmBvI,SAAU,EAE7BsI,EAAgBnG,GAAQoG,EACxBD,EAAgBnG,GAAMzC,MAAQiF,EAAkBhF,EAAO2I,EAAgBnG,GAAMyC,OAE7EnE,KAAKgC,SAAS,WACV,MAAO,CACH8B,aAAc+D,IAEnB,WACC,IAAM9D,EAAYF,EAAsBkE,EAAKzH,MAAMwD,cACnDiE,EAAK/F,SAAS,CACV+B,iDAKc,IAAAiE,EAAAhI,KAClB8F,OAAeO,EAanB,OAZIrG,KAAKM,MAAMwD,aAAaoB,SAAShG,QACjC4G,EAAelH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAC1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,gBACVwC,QAAS,kBAAMyG,EAAK5H,SAAS6B,QAC7BN,MAAO,CAACyF,SAAU,OAAQxF,UAAW,QAASyF,MAAO,QACrDtF,IAAK,uCAAyC/B,KAAKM,MAAMwD,aAAaoB,SAAShG,MAC/E4C,IAAK9B,KAAKM,MAAMwF,kBAK5BlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASiB,KAAKM,MAAM0F,YAEtCpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAa0G,YAChC/K,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,MACtD7H,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAae,MAChCpF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,MACtD7H,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAagB,SAChCrF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,OAE1D7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAakB,SAChCvF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,MACtD7H,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAamB,WAChCxF,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,OAE1D7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACuJ,EAAD,CAAarJ,OAAQgB,KAAKM,MAAMwD,aAAaoB,SAChCzF,QAAS,SAACjB,GAAD,OAAWwJ,EAAKvG,cAAcjD,OAIxDI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMwC,QAAS,kBAAMyG,EAAKM,uBAA5C,kBAGPxC,EACDlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACqJ,EAAD,CAAOnJ,OAAQgB,KAAKM,MAAMwD,aAAasB,MAChC3F,QAAS,SAACgH,GAAD,OAAgBuB,EAAKI,iBAAiB3B,OAE1D7H,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyJ,EAAD,CACIrF,SAAUlD,KAAKM,MAAMwD,aAAa2G,eAAeC,mBAAmBxL,MACpEO,QAAS,SAACgH,GACNuB,EAAKQ,4BAA4B,qBAAsB/B,EAAO,sBAK1E7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACyJ,EAAD,CACIrF,SAAUlD,KAAKM,MAAMwD,aAAa2G,eAAehF,WAAWvG,MAC5DO,QAAS,SAACgH,GACNuB,EAAKQ,4BAA4B,aAAc/B,EAAO,sBAIlE7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAM0J,UAAWzI,KAAKM,MAAMyD,UAAWxC,QAAS,kBAAMyG,EAAKU,eACxE1I,KAAKM,MAAMyF,0BAnQyBzD,aCTxCuI,+LAGb7K,KAAKgC,SAAS,CACV+D,gBAAiB,OAAQC,UAAW,4DAKxC9E,IAAM8F,KAAK2B,EAAsB3I,KAAK6I,iBAAiB5B,KAAK,SAAC7F,aAT7BuJ,wBCCnBG,8MACVxK,MAAmC,sFAEhB,IAAAkB,EAAAxB,KACtBkB,IAAMC,IAAIwH,GACL1B,KAAK,SAAAgC,GAAY,IACVC,EADA9H,EAAU6H,EAAV7H,KAEAA,IACA8H,EAAU9H,EAAK2J,SAAS1J,IAAI,SAAC2J,GACzB,OACIpM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAauC,IAAK0J,EAAQrL,IACrCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAYqK,KAAO5K,MAAOuD,IPN9C,wBOM+D4G,EAAiBqC,EAAQ9F,SAAUpD,IAAKkJ,EAAQ9F,WAChGtG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAciM,EAAQnG,OACtCjG,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAI,iBAAmB0B,EAAQR,YAC/BzL,UAAU,yDAAwDH,EAAAC,EAAAC,cAAA,KACpEC,UAAU,kBAD0D,iBAG5EH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAIkM,EAAQjG,wBAOpCvD,EAAKQ,SAAS,CAACkH,+CAMvB,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,iBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACViB,KAAKM,MAAM4I,iBAvCSK,IAAMjH,skBCE1B2I,8MACVC,UAAoC,sFAEjB,IAAA1J,EAAAxB,KACtBA,KAAKgC,SAAS,CACV+D,gBAAiB,SACjBC,UAAW,iBAEf9E,IAAMC,IAAsBwH,EAAyB3I,KAAKtB,MAAcgL,MAAMC,OAAOa,aAAavD,KAAK,SAAAgC,GAAY,IAAV7H,EAAU6H,EAAV7H,KACrGI,EAAK0J,UAAY9J,EAAKzB,GACtBqK,QAAQC,IAAI7I,GAEZ,IAAI0C,EAAe+B,oBAAUrE,EAAKlB,MAAMwD,cACxC,IAAK,IAAM8F,KAAQxI,EACf,GAAMA,EAAKwI,IAA+B,kBAAfxI,EAAKwI,GAAoB,CAChD,IAAMC,EAAgBhE,oBAAUzE,EAAKwI,IACrC9F,EAAYqH,GAAA,GACLrH,EADK1E,OAAAkH,EAAA,EAAAlH,CAAA,GAEPwK,EAFOuB,GAAA,GAGD3J,EAAKuI,WAAWjG,EAAa8F,GAAOC,WAI/C,IAAK,IAAMzD,KAAWtC,EACdA,EAAa8F,SAAsCvD,IAA7BvC,EAAa8F,GAAM1K,QACzC4E,EAAa8F,GAAM1K,MAAQkC,EAAKwI,IAKhDpI,EAAKQ,SAAS,CACV8B,aAAcA,iDAMPf,EAA0BC,EAAyBC,GAClEtC,EAAEuF,sDAIYM,EAAkB2D,GAChC,IAAK,IAAMC,KAAcD,EACjB3D,EAAY4D,SAAiD/D,IAAlCG,EAAY4D,GAAYlL,QAClDsH,EAAY4D,GAAoBlL,MAAQiL,EAAWC,IAG5D,OAAO5D,uCAIHxG,KAAKkL,WACLhK,IAAMmJ,IAAI,gBAAkBrK,KAAKkL,UAAWlL,KAAK6I,iBAAiB5B,KAAK,SAAC7F,aArD3CuJ,GCJpBS,oLAIT,OACOxM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMtK,UAAW,+BAAgCuK,GAAI,KAArD,0BAPgBC,IAAMjH,WCDxB+I,8MACV/K,MAAQ,CAACc,KAAM,8EAGlB,OACIxC,EAAAC,EAAAC,cAAA,sCAL0BwD,aCSjBgJ,8MACVhL,MAAQ,CAACc,KAAM,8EAGlB,OACIxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyM,EAAA,EAAD,KACI3M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWL,KACjCzM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,UAAW9C,IAC3ChK,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAW1C,IACtCpK,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,2BAA2BE,UAAWlC,IAClD5K,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAWb,KAC5CjM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,gBAAgBE,UAAWZ,KACvClM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,6BAA6BE,UAAWT,KACpDrM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,cAAcE,UAAWN,KACrCxM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAQG,UAAWN,cAfL9I,kCCLrBqJ,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA/L,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAA2L,GAAA,QAAAG,EAAAC,UAAAvH,OAAAwH,EAAA,IAAAC,MAAAH,GAAA7H,EAAA,EAAAA,EAAA6H,EAAA7H,IAAA+H,EAAA/H,GAAA8H,UAAA9H,GAAA,OAAAnE,EAAAV,OAAAa,EAAA,EAAAb,CAAAY,MAAA6L,EAAAzM,OAAAc,EAAA,EAAAd,CAAAuM,IAAAxL,KAAA+L,MAAAL,EAAA,CAAA7L,MAAAmM,OAAAH,MACW1L,WADX,EAAAR,EAAA,OAAAV,OAAAgN,EAAA,EAAAhN,CAAAuM,EAAAC,GAAAxM,OAAAiN,EAAA,EAAAjN,CAAAuM,EAAA,EAAArK,IAAA,oBAAApC,MAAA,WAIQ,IAAMoN,EAAU7L,SAAS8L,iBAAiB,YAC1C5L,EAAE6L,QAAQ3L,KAAKyL,KALvB,CAAAhL,IAAA,SAAApC,MAAA,WASQ,OAAQN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAW0N,KAAOlO,WACnBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAG,IAAIvK,UAAU,cAAvB,QACAH,EAAAC,EAAAC,cAAA,MAAIa,GAAG,aAAaZ,UAAU,8BAC1BH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG4N,KAAK,aAAR,YAIhB9N,EAAAC,EAAAC,cAAA,MAAIa,GAAG,YAAYZ,UAAU,yBACzBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEfH,EAAAC,EAAAC,cAAA,KAAG4N,KAAK,UAAS9N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,0BAGzBH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG4N,KAAK,MAAK9N,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAAb,yBACJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEnBH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAG,eAAT,eACJ1K,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAG,gBAAT,gBACJ1K,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAG,gBAAT,gBACJ1K,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAMC,GAAG,iBAAT,kBAER1K,EAAAC,EAAAC,cAAA,OAAKC,UAAW0N,KAAOlO,WACnBK,EAAAC,EAAAC,cAAC6N,GAAD,YApCpBhB,EAAA,CAA+BpC,IAAMjH,WCctBsK,8CAVO,WAClB,OACIhO,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACIzK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC+N,GAAD,UCHIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2DCVNxI,IAAMgM,SAASC,QAAU,wBAEzBC,IAASC,OAAOzO,EAAAC,EAAAC,cAACwO,GAAD,MAAS7M,SAAS8M,eAAe,SD+H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzG,KAAK,SAAA0G,GACjCA,EAAaC","file":"static/js/main.8c9fd78c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"teAppMain\":\"dashboard_teAppMain__aIjDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"all-courses_image__2cyIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"all-diplomas_image__3PdNh\"};","import React from 'react';\n\n\n\nexport const Input: React.FC<any> = (props: any) => {\n    const error =\n        <span  className={props.config.valid && !props.config.valid.value? 'invalid' : 'validate'}>\n                    {props.config.valid.message}</span>;\n    return (\n            <div className={props.config.className}>\n                <input\n                    {...props.config.input}\n                    className={props.config.valid && !props.config.valid.value && props.config.touched ? 'invalid' : 'validate'}\n                    onChange={props.changed}\n                    value={props.config.value}/>\n                <label htmlFor={props.config.input.id}>{props.config.inputLabel}</label>\n                {error}\n            </div>\n\n    );\n};\n\n\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\ndeclare const M: any;\n\ninterface ImageInterface {\n    changed: (val: string) => void,\n    config: {[key:string]: string}\n}\n\n\n\nexport default class SelectImage extends Component<ImageInterface> {\n    public instance: any;\n    public imagesLink: { [key: string]: string }[] = [];\n    public state: any;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            images: []\n        };\n    }\n\n    public componentDidMount(): void {\n        const elem: Element | null = document.querySelector('.modal');\n        this.instance = M.Modal.init(elem);\n    }\n\n    public onSelectImage(image: string): void {\n        this.props.changed(image);\n        this.instance.close();\n    }\n\n    public async onClickOpenModal(e: MouseEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n        const {data} = await Axios.get('/api/image/link');\n        this.imagesLink = data && data.imagesLink;\n        const images = this.imagesLink.map((image) => {\n            return <img\n                key={image.id}\n                onClick={() => this.onSelectImage(image.name)}\n                style={{ maxHeight: '150px', minHeight: '150px'}}\n                className='col l4 m6 s12'\n                alt={image.name}\n                src={'http://localhost:3000/assets/images/' + image.name}/>\n        });\n        this.setState(() => {\n            return {\n                images\n            }\n        });\n        this.instance.open()\n    }\n\n    render(): React.ReactNode {\n        return (\n            <div>\n                <button\n                    {...this.props.config.button}\n                    onClick={(e: any) => this.onClickOpenModal(e)}\n                   className={this.props.config.className}\n                >\n                    {this.props.config.buttonLabel}\n                </button>\n\n                <div id=\"modal1\" className=\"modal\">\n                    <div className=\"modal-content\">\n                            <div className='row'>\n                                {this.state.images}\n                            </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { ContentState, EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './text-rich-editor.css';\nimport { stateToHTML } from 'draft-js-export-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n\nexport default class TextRichEditor extends Component<any> {\n    public state = {editorState: EditorState.createEmpty()}\n\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (prevProps.htmlText !== this.props.htmlText) {\n            const contentBlock = htmlToDraft(this.props.htmlText);\n            if (contentBlock && !!this.props.htmlText) {\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                const editorState = EditorState.createWithContent(contentState);\n                this.setState({\n                    editorState,\n                });\n            }\n        }\n    }\n\n    public onEditorStateChange: any = (editorState: any) => {\n        const html = stateToHTML(editorState.getCurrentContent());\n        this.props.changed(html);\n        this.setState({\n            editorState,\n        });\n    };\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        const {editorState} = this.state;\n        return (\n            <div className='text-rich-editor-border'>\n                <Editor\n                    editorState={editorState}\n                    wrapperClassName=\"wrapper-class\"\n                    editorClassName=\"editor-class\"\n                    onEditorStateChange={(editorState) => this.onEditorStateChange(editorState)}\n                />\n            </div>\n        );\n    }\n}\n\n","import { validatorsControl } from './validators-control';\n\nexport function minLengthValidator(value: string, minLength: number): boolean {\n    const _value = value.trim();\n    return (!!_value && (_value.length >= minLength));\n}\n\nexport function formControlsValidator(formControls: any): boolean {\n    let formValid = true;\n    for(const key in formControls) {\n        if (!formControls[key].value) {\n            formValid = formValid && validatorsControl(formControls[key].value, formControls[key].rules).value;\n        } else {\n            const subForm = formControls[key];\n            for (const _key in subForm) {\n                if (subForm[_key].value) {\n                    formValid = formValid && validatorsControl(subForm[_key].value, subForm[_key].rules).value;\n                }\n            }\n        }\n        if(!formValid) {\n            break;\n        }\n    }\n    return formValid;\n}\n","import { minLengthValidator } from './validators';\n\nexport function validatorsControl(value: string, rules: any): any {\n    let isValid = true;\n    let valid = {\n        value: true,\n        message: ''\n    };\n\n    if (rules && rules.minLength && isValid) {\n        isValid = minLengthValidator(value, rules.minLength.value);\n        if (!isValid) {\n            valid = {\n                value: isValid,\n                message: rules.minLength.message\n            }\n        }\n    }\n\n    return valid\n}\n","export const  NEW_COURSE_CONTROLS = {\n    courseName: {\n        input: {\n            id: 'courseName',\n            type: 'text',\n            name: 'courseName'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'course Name',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n\n    },\n    title: {\n        input: {\n            id: 'title',\n            type: 'text',\n            name: 'title'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Title',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    category: {\n        input: {\n            id: 'category',\n            type: 'text',\n            name: 'category'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Category',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    shortDescription: {\n        input: {\n            id: 'shortDescription',\n            type: 'text',\n            name: 'shortDescription'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Short Description',\n        value: 'jjjjjjjjj',\n        touched: false,\n        rules: {},\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    imageAlt: {\n        input: {\n            id: 'imageAlt',\n            type: 'text',\n            name: 'imageAlt'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'image Alt',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    imageTitle: {\n        input: {\n            id: 'imageTitle',\n            type: 'text',\n            name: 'imageTitle'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'image Title',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    imageUrl: {\n        button: {\n            id: 'imageUrl',\n            type: 'button',\n            name: 'imageUrl',\n            hidden: false\n        },\n        className: 'waves-effect waves-light btn modal-trigger',\n        buttonLabel: 'Select Image',\n        value: '',\n        touched: false,\n        rules: {},\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    price: {\n        input: {\n            id: 'price',\n            type: 'text',\n            name: 'price'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Price',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    courseDetails: {\n        courseDescription: {\n            textEditor: {\n                id: 'courseDescription',\n                type: 'text',\n                name: 'courseDescription'\n            },\n            className: 'input-field col l4 m6 s12',\n            editorHeader: 'Course Description',\n            value: '',\n            touched: false,\n            rules: {},\n            valid: {\n                value: true,\n                message: ''\n            },\n        },\n        curriculum: {\n            textEditor: {\n                id: 'courseDescription',\n                type: 'text',\n                name: 'courseDescription'\n            },\n            className: 'input-field col l4 m6 s12',\n            editorHeader: 'Course Description',\n            value: '',\n            touched: false,\n            rules: {},\n            valid: {\n                value: true,\n                message: ''\n            },\n        },\n        medias: {\n            textEditor: {\n                id: 'courseDescription',\n                type: 'text',\n                name: 'courseDescription'\n            },\n            className: 'input-field col l4 m6 s12',\n            editorHeader: 'Course Description',\n            value: [],\n            touched: false,\n            rules: {},\n            valid: {\n                value: true,\n                message: ''\n            },\n        },\n    }\n};","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport { Input } from '../components/input/input';\nimport SelectImage from '../components/image/select-image';\nimport TextRichEditor from '../components/text-editor/text-rich-editor';\nimport { validatorsControl } from '../core.mod/vaidators/validators-control';\nimport { formControlsValidator } from '../core.mod/vaidators/validators';\nimport { NEW_COURSE_CONTROLS } from '../core.mod/vaidators/new-course-controls';\nimport { cloneDeep } from 'lodash';\n\ndeclare const M: any;\n\n\nexport default abstract class AbstractCourseDetails extends Component {\n    public state: any = {\n        formControls: {\n            ...cloneDeep(NEW_COURSE_CONTROLS),\n        },\n        formValid: false,\n        previewImage: null,\n        imageUrl: null,\n        saveButtonLabel: null,\n        pageTitle: null,\n        isDeletable: false,\n    };\n    public instance: any;\n    /**\n     * saveCourse will save newCourse or update existing course\n     */\n    public abstract saveCourse(): void;\n\n    /**\n     * delete Course and navigate to all courses\n     */\n    public abstract deleteCourse(): void;\n\n    componentDidMount(): void {\n        M.updateTextFields();\n    }\n\n    public mapCourseData(): { [key: string]: string } {\n        let formData: { [key: string]: string } = {};\n        const {formControls} = this.state;\n        for (const control in formControls) {\n            if (formControls[control].value !== undefined) {\n                formData[control] = formControls[control].value;\n            } else {\n                formData = {\n                    ...formData,\n                    [control]: {\n                        ...this.spreadSubForm(formControls[control])\n                    }\n                }\n            }\n        }\n        return formData;\n    }\n\n\n    public spreadSubForm(formControl: any): any {\n        let formData: { [key: string]: string } = {};\n        for (const control in formControl) {\n            if (formControl[control].value !== undefined) {\n                formData[control] = formControl[control].value;\n            }\n        }\n        return formData;\n    }\n\n    public handleChangeImage(event: any) {\n        const files = event.target.files;\n        const formData: FormData = new FormData();\n        const fileReader = new FileReader();\n        //this.handleChangeFormControls(name, files[0]);\n        formData.append('image', files[0]);\n        Axios.post('/api/image', formData).then((data) => {\n            this.setState(() => {\n                return {\n                    formControls: {\n                        ...this.state.formControls,\n                        imageUrl: {\n                            ...this.state.formControls.imageUrl,\n                            value: data.data.imageName\n                        }\n                    },\n                }\n            });\n        });\n\n        fileReader.onloadend = () => {\n            this.setState({\n                previewImage:\n                    <div className={'row'}>\n                        <div className={'col l12'}>\n                            <img className={'materialboxed'}\n                                 style={{maxWidth: '100%', maxHeight: '300px', width: '100%'}}\n                                 src={fileReader.result as string} alt=\"\"/>\n                        </div>\n                    </div>\n            })\n        };\n        fileReader.readAsDataURL(files[0]);\n    }\n\n\n    // TODO 'handle default image'\n    public onSelectImage(image: string): void {\n        this.setState(() => {\n            return {\n                formControls: {\n                    ...this.state.formControls,\n                    imageUrl: {\n                        ...this.state.formControls.imageUrl,\n                        value: image\n                    }\n                },\n                previewImage: image\n\n            }\n        }, () => {\n            const elem = document.querySelector('.materialboxed');\n            this.instance = M.Materialbox.init(elem);\n        });\n    }\n\n\n    public deletePreviewImage() {\n        this.setState(() => {\n            return {\n                formControls: {\n                    ...this.state.formControls,\n                    imageUrl: {\n                        ...this.state.formControls.imageUrl,\n                        value: null\n                    }\n                },\n                previewImage: null\n            }\n        });\n    }\n\n\n    public handleChangeText(event: any) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.handleChangeFormControls(name, value);\n    }\n\n    public handleChangeSubFormControls(name: string, value: string, subControl: string) {\n        const updatedControls: any = {\n            ...this.state.formControls[subControl]\n        };\n\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = validatorsControl(value, updatedControls[name].rules);\n        updatedControls[name] = updatedFormElement;\n\n\n        this.setState(() => {\n            return {\n                formControls: {\n                    ...this.state.formControls,\n                    [subControl]: {\n                        ...updatedControls,\n\n                    }\n                }\n            }\n        }, () => {\n            const formValid = formControlsValidator(this.state.formControls);\n            this.setState({\n                formValid\n            });\n        });\n    }\n\n\n    public handleChangeFormControls(name: string, value: string) {\n        const updatedControls: any = {\n            ...this.state.formControls\n        };\n\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n\n        updatedControls[name] = updatedFormElement;\n        updatedControls[name].valid = validatorsControl(value, updatedControls[name].rules);\n\n        this.setState(() => {\n            return {\n                formControls: updatedControls,\n            }\n        }, () => {\n            const formValid = formControlsValidator(this.state.formControls);\n            this.setState({\n                formValid\n            });\n        });\n    }\n\n    render(): React.ReactNode {\n        let previewImage = undefined;\n        if (this.state.formControls.imageUrl.value) {\n            previewImage = <div className='row'>\n                <div className='col l12'>\n                    <img\n                        className='materialboxed'\n                        onClick={() => this.instance.open()}\n                        style={{maxWidth: '100%', maxHeight: '300px', width: '100%'}}\n                        src={'http://localhost:3000/assets/images/' + this.state.formControls.imageUrl.value}\n                        alt={this.state.previewImage}/>\n                </div>\n            </div>;\n        }\n        const deleteElement = this.state.isDeletable &&\n            <a onClick={()=> this.deleteCourse()} className={'btn-floating btn-large waves-effect waves-light right'}><i className='material-icons'>delete_forever</i></a>;\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h5 className='title'>{this.state.pageTitle}</h5>\n                    {deleteElement}\n                </div>\n                <div className=\"row\">\n                    <Input config={this.state.formControls.courseName}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                    <Input config={this.state.formControls.title}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                    <Input config={this.state.formControls.category}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                </div>\n                <div className=\"row\">\n                    <Input config={this.state.formControls.imageAlt}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                    <Input config={this.state.formControls.imageTitle}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                </div>\n                <div className='row'>\n                    <div className='col l4 m6 s12'>\n                        <SelectImage config={this.state.formControls.imageUrl}\n                                     changed={(image) => this.onSelectImage(image)}>\n\n                        </SelectImage>\n                    </div>\n                    <div className='col l4 m6 s12'>\n                        <button className='btn' onClick={() => this.deletePreviewImage()}>Delete Image</button>\n                    </div>\n                </div>\n                {previewImage}\n                <div className=\"row\">\n                    <Input config={this.state.formControls.price}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                </div>\n                <label>Description</label>\n                <div className=\"row\">\n                    <TextRichEditor\n                        htmlText={this.state.formControls.courseDetails.courseDescription.value}\n                        changed={(event: any) => {\n                            this.handleChangeSubFormControls('courseDescription', event, 'courseDetails')\n                        }}>\n                    </TextRichEditor>\n                </div>\n\n                <div className=\"row\">\n                    <label>curriculum</label>\n                    <TextRichEditor\n                        htmlText={this.state.formControls.courseDetails.curriculum.value}\n                        changed={(event: any) => {\n                            this.handleChangeSubFormControls('curriculum', event, 'courseDetails')\n                        }}>\n                    </TextRichEditor>\n                </div>\n                <div className=\"row\">\n                    <button className='btn' disabled={!this.state.formValid} onClick={() => this.saveCourse()}>\n                        {this.state.saveButtonLabel}\n                    </button>\n                </div>\n            </div>\n\n        );\n    }\n\n}\n","\nexport const API_PATH = {\n    COURSES: '/api/courses',\n    CREATE_NEW_USER: '/api/user/signup',\n    LOGIN_USER: '/api/user/login',\n    DIPLOMAS: '/api/diplomas',\n    COURSE_DETAILS: '/api/course/details/',\n    IMAGE: '/assets/images/',\n    NEW_COURSE: '/api/course',\n    NEW_DIPLOMA: '/api/diploma',\n    EDIT_DIPLOMA: '/api/diploma/details/'\n};\n\nexport const DATA_BANK = 'http://localhost:3000';\n\nexport default class ProxyService {\n\n}\n","import Axios from 'axios';\nimport AbstractCourseDetails from '../abstract-course-details';\nimport { API_PATH } from '../../core.mod/proxy-service/proxy-service';\n\n\nexport default class NewCourse extends AbstractCourseDetails {\n\n    componentDidMount(): void {\n        this.setState({\n            saveButtonLabel: 'Save', pageTitle: 'Create new Course', isDeletable: false\n        });\n    }\n\n    public saveCourse(): void {\n        Axios.post(API_PATH.NEW_COURSE, this.mapCourseData()).then((data) => {\n            (this.props as any).history.push('/all-courses')\n        })\n    }\n    public deleteCourse(): void {\n    }\n}\n","import React from 'react';\nimport Axios from 'axios'\nimport { API_PATH, DATA_BANK } from '../../core.mod/proxy-service/proxy-service';\nimport { Link } from 'react-router-dom';\nimport styles from './all-courses.module.scss';\n\nexport default class AllCourses extends React.Component<any> {\n    public state: { [key: string]: string } = {};\n\n    componentDidMount(): void {\n        Axios.get(API_PATH.COURSES)\n            .then(({data}) => {\n                let courses;\n                if (data) {\n                    courses = data.courses.map((course: any) => {\n                        return (\n                            <div className='col s12 m4' key={course.id}>\n                                <div className='card'>\n                                    <div className='card-image'>\n                                        <img className={ styles.image} src={DATA_BANK + API_PATH.IMAGE + course.imageUrl} alt={course.imageAlt}/>\n                                        <span className='card-title'>{course.title}</span>\n                                        <Link to={'/edit-course/' + course.courseName}\n                                              className='btn-floating halfway-fab waves-effect waves-light red'><i\n                                            className='material-icons'>folder_open</i></Link>\n                                    </div>\n                                    <div className='card-content'>\n                                        <p>{course.shortDescription}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                this.setState({courses})\n            })\n\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    {this.state.courses}\n                </div>\n            </div>\n        );\n    }\n\n}\n","import Axios from 'axios';\nimport AbstractCourseDetails from '../abstract-course-details';\nimport { cloneDeep } from 'lodash';\nimport { API_PATH } from '../../core.mod/proxy-service/proxy-service';\n\ndeclare const M: any;\n\nexport default class EditCourse extends AbstractCourseDetails {\n    public courseID: string = '';\n\n\n    componentDidMount(): void {\n        this.setState({\n            saveButtonLabel: 'Update',\n            pageTitle: 'Edit Course',\n            isDeletable: true\n        });\n        Axios.get( API_PATH.COURSE_DETAILS + (this.props as any).match.params.courseName).then(({data}) => {\n            if (data) {\n                this.courseID = data.id;\n                // TODO fix it\n                let formControls = cloneDeep(this.state.formControls);\n                for (const item in data) {\n                    if (!!data[item] && typeof data[item] === 'object') {\n                        const subCourseItem = cloneDeep(data[item]);\n                        formControls = {\n                            ...formControls,\n                            [item]: {\n                                ...this.spreadData(formControls[item], subCourseItem)\n                            }\n                        }\n                    } else {\n                        for (const control in formControls) {\n                            if (formControls[item] && formControls[item].value !== undefined && control) {\n                                formControls[item].value = data[item];\n                            }\n                        }\n                    }\n                }\n                this.setState({\n                    formControls: formControls\n                })\n            }\n            else {\n                console.log('fsdfd')\n            }\n            }).catch((e: Error) => {\n            (this.props as any).history.push('/error-page')\n        });\n    }\n\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{}>, snapshot?: any): void {\n        M.updateTextFields();\n    }\n\n    public spreadData(formControl: any, nestedData: any): any {\n        for (const nestedItem in nestedData) {\n            if (formControl[nestedItem] && formControl[nestedItem].value !== undefined) {\n                (formControl[nestedItem] as any).value = nestedData[nestedItem];\n            }\n        }\n        return formControl;\n    }\n\n    public saveCourse(): void {\n        if (this.courseID) {\n            Axios.put('/api/course/' + this.courseID, this.mapCourseData()).then((data) => {\n                (this.props as any).history.push('/all-courses')\n            })\n        }\n    }\n\n    public deleteCourse(): void {\n        if (this.courseID) {\n            Axios.delete('/api/course/' + this.courseID).then(() => {\n                (this.props as any).history.push('/all-courses')\n            })\n        }\n}\n\n}\n","export const  NEW_DIPLOMA_CONTROLS = {\n    diplomaName: {\n        input: {\n            id: 'diplomaName',\n            type: 'text',\n            name: 'diplomaName'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Diploma Name',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n\n    },\n    title: {\n        input: {\n            id: 'title',\n            type: 'text',\n            name: 'title'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Title',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    category: {\n        input: {\n            id: 'category',\n            type: 'text',\n            name: 'category'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Category',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    shortDescription: {\n        input: {\n            id: 'shortDescription',\n            type: 'text',\n            name: 'shortDescription'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Short Description',\n        value: 'jjjjjjjjj',\n        touched: false,\n        rules: {},\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    imageAlt: {\n        input: {\n            id: 'imageAlt',\n            type: 'text',\n            name: 'imageAlt'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'image Alt',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    imageTitle: {\n        input: {\n            id: 'imageTitle',\n            type: 'text',\n            name: 'imageTitle'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'image Title',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    imageUrl: {\n        button: {\n            id: 'imageUrl',\n            type: 'button',\n            name: 'imageUrl',\n            hidden: false\n        },\n        className: 'waves-effect waves-light btn modal-trigger',\n        buttonLabel: 'Select Image',\n        value: '',\n        touched: false,\n        rules: {},\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    price: {\n        input: {\n            id: 'price',\n            type: 'text',\n            name: 'price'\n        },\n        className: 'input-field col l4 m6 s12',\n        inputLabel: 'Price',\n        value: '',\n        touched: false,\n        rules: {\n            minLength: {\n                value: 4,\n                message: 'hiii'\n            }\n        },\n        valid: {\n            value: true,\n            message: ''\n        },\n    },\n    diplomaDetails: {\n        diplomaDescription: {\n            textEditor: {\n                id: 'diplomaDescription',\n                type: 'text',\n                name: 'diplomaDescription'\n            },\n            className: 'input-field col l4 m6 s12',\n            editorHeader: 'Course Description',\n            value: '',\n            touched: false,\n            rules: {},\n            valid: {\n                value: true,\n                message: ''\n            },\n        },\n        curriculum: {\n            textEditor: {\n                id: 'diplomaDescription',\n                type: 'text',\n                name: 'diplomaDescription'\n            },\n            className: 'input-field col l4 m6 s12',\n            editorHeader: 'Course Description',\n            value: '',\n            touched: false,\n            rules: {},\n            valid: {\n                value: true,\n                message: ''\n            },\n        },\n        medias: {\n            textEditor: {\n                id: 'diplomaDescription',\n                type: 'text',\n                name: 'diplomaDescription'\n            },\n            className: 'input-field col l4 m6 s12',\n            editorHeader: 'Course Description',\n            value: [],\n            touched: false,\n            rules: {},\n            valid: {\n                value: true,\n                message: ''\n            },\n        },\n    }\n};","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport { Input } from '../components/input/input';\nimport SelectImage from '../components/image/select-image';\nimport TextRichEditor from '../components/text-editor/text-rich-editor';\nimport { validatorsControl } from '../core.mod/vaidators/validators-control';\nimport { formControlsValidator } from '../core.mod/vaidators/validators';\nimport { cloneDeep } from 'lodash';\nimport { NEW_DIPLOMA_CONTROLS } from '../core.mod/vaidators/new-diploma-controls';\n\ndeclare const M: any;\n\n\nexport default abstract class AbstractDiplomaDetails extends Component {\n    public state: any = {\n        formControls: {\n            ...cloneDeep(NEW_DIPLOMA_CONTROLS),\n        },\n        formValid: false,\n        previewImage: null,\n        imageUrl: null,\n        saveButtonLabel: null,\n        pageTitle: null\n    };\n    public instance: any;\n\n    /**\n     * saveCourse will save newCourse or update existing diploma\n     */\n    public abstract saveCourse(): void;\n\n    componentDidMount(): void {\n        M.updateTextFields();\n    }\n\n    public mapCourseData(): { [key: string]: string } {\n        let formData: { [key: string]: string } = {};\n        const {formControls} = this.state;\n        for (const control in formControls) {\n            if (formControls[control].value !== undefined) {\n                formData[control] = formControls[control].value;\n            } else {\n                formData = {\n                    ...formData,\n                    [control]: {\n                        ...this.spreadSubForm(formControls[control])\n                    }\n                }\n            }\n        }\n        return formData;\n    }\n\n\n    public spreadSubForm(formControl: any): any {\n        let formData: { [key: string]: string } = {};\n        for (const control in formControl) {\n            if (formControl[control].value !== undefined) {\n                formData[control] = formControl[control].value;\n            }\n        }\n        return formData;\n    }\n\n    public handleChangeImage(event: any) {\n        const files = event.target.files;\n        const formData: FormData = new FormData();\n        const fileReader = new FileReader();\n        //this.handleChangeFormControls(name, files[0]);\n        formData.append('image', files[0]);\n        Axios.post('/api/image', formData).then((data) => {\n            this.setState(() => {\n                return {\n                    formControls: {\n                        ...this.state.formControls,\n                        imageUrl: {\n                            ...this.state.formControls.imageUrl,\n                            value: data.data.imageName\n                        }\n                    },\n                }\n            });\n        });\n\n        fileReader.onloadend = () => {\n            this.setState({\n                previewImage:\n                    <div className={'row'}>\n                        <div className={'col l12'}>\n                            <img className={'materialboxed'}\n                                 style={{maxWidth: '100%', maxHeight: '300px', width: '100%'}}\n                                 src={fileReader.result as string} alt=\"\"/>\n                        </div>\n                    </div>\n            })\n        };\n        fileReader.readAsDataURL(files[0]);\n    }\n\n\n    // TODO 'handle default image'\n    public onSelectImage(image: string): void {\n        this.setState(() => {\n            return {\n                formControls: {\n                    ...this.state.formControls,\n                    imageUrl: {\n                        ...this.state.formControls.imageUrl,\n                        value: image\n                    }\n                },\n                previewImage: image\n\n            }\n        }, () => {\n            const elem = document.querySelector('.materialboxed');\n            this.instance = M.Materialbox.init(elem);\n        });\n    }\n\n\n    public deletePreviewImage() {\n        this.setState(() => {\n            return {\n                formControls: {\n                    ...this.state.formControls,\n                    imageUrl: {\n                        ...this.state.formControls.imageUrl,\n                        value: null\n                    }\n                },\n                previewImage: null\n            }\n        });\n    }\n\n\n    public handleChangeText(event: any) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.handleChangeFormControls(name, value);\n    }\n\n    public handleChangeSubFormControls(name: string, value: string, subControl: string) {\n        const updatedControls: any = {\n            ...this.state.formControls[subControl]\n        };\n\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = validatorsControl(value, updatedControls[name].rules);\n        updatedControls[name] = updatedFormElement;\n\n\n        this.setState(() => {\n            return {\n                formControls: {\n                    ...this.state.formControls,\n                    [subControl]: {\n                        ...updatedControls,\n\n                    }\n                }\n            }\n        }, () => {\n            const formValid = formControlsValidator(this.state.formControls);\n            this.setState({\n                formValid\n            });\n        });\n    }\n\n\n    public handleChangeFormControls(name: string, value: string) {\n        const updatedControls: any = {\n            ...this.state.formControls\n        };\n\n        const updatedFormElement = {\n            ...updatedControls[name]\n        };\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n\n        updatedControls[name] = updatedFormElement;\n        updatedControls[name].valid = validatorsControl(value, updatedControls[name].rules);\n\n        this.setState(() => {\n            return {\n                formControls: updatedControls,\n            }\n        }, () => {\n            const formValid = formControlsValidator(this.state.formControls);\n            this.setState({\n                formValid\n            });\n        });\n    }\n\n    render(): React.ReactNode {\n        let previewImage = undefined;\n        if (this.state.formControls.imageUrl.value) {\n            previewImage = <div className='row'>\n                <div className='col l12'>\n                    <img\n                        className='materialboxed'\n                        onClick={() => this.instance.open()}\n                        style={{maxWidth: '100%', maxHeight: '300px', width: '100%'}}\n                        src={'http://localhost:3000/assets/images/' + this.state.formControls.imageUrl.value}\n                        alt={this.state.previewImage}/>\n                </div>\n            </div>;\n        }\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h5 className='title'>{this.state.pageTitle}</h5>\n                </div>\n                <div className=\"row\">\n                    <Input config={this.state.formControls.diplomaName}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                    <Input config={this.state.formControls.title}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                    <Input config={this.state.formControls.category}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                </div>\n                <div className=\"row\">\n                    <Input config={this.state.formControls.imageAlt}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                    <Input config={this.state.formControls.imageTitle}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                </div>\n                <div className='row'>\n                    <div className='col l4 m6 s12'>\n                        <SelectImage config={this.state.formControls.imageUrl}\n                                     changed={(image) => this.onSelectImage(image)}>\n\n                        </SelectImage>\n                    </div>\n                    <div className='col l4 m6 s12'>\n                        <button className='btn' onClick={() => this.deletePreviewImage()}>Delete Image</button>\n                    </div>\n                </div>\n                {previewImage}\n                <div className=\"row\">\n                    <Input config={this.state.formControls.price}\n                           changed={(event: any) => this.handleChangeText(event)}/>\n                </div>\n                <label>Description</label>\n                <div className=\"row\">\n                    <TextRichEditor\n                        htmlText={this.state.formControls.diplomaDetails.diplomaDescription.value}\n                        changed={(event: any) => {\n                            this.handleChangeSubFormControls('diplomaDescription', event, 'diplomaDetails')\n                        }}>\n                    </TextRichEditor>\n                </div>\n\n                <div className=\"row\">\n                    <label>curriculum</label>\n                    <TextRichEditor\n                        htmlText={this.state.formControls.diplomaDetails.curriculum.value}\n                        changed={(event: any) => {\n                            this.handleChangeSubFormControls('curriculum', event, 'diplomaDetails')\n                        }}>\n                    </TextRichEditor>\n                </div>\n                <div className=\"row\">\n                    <button className='btn' disabled={!this.state.formValid} onClick={() => this.saveCourse()}>\n                        {this.state.saveButtonLabel}\n                    </button>\n                </div>\n            </div>\n\n        );\n    }\n\n}","import Axios from 'axios';\nimport AbstractDiplomaDetails from '../abstract-diploma-details';\nimport { API_PATH } from '../../core.mod/proxy-service/proxy-service';\n\n\nexport default class NewDiploma extends AbstractDiplomaDetails {\n\n    componentDidMount(): void {\n        this.setState({\n            saveButtonLabel: 'Save', pageTitle: 'Create new Diploma'\n        });\n    }\n\n    public saveCourse(): void {\n        Axios.post(API_PATH.NEW_DIPLOMA, this.mapCourseData()).then((data) => {\n            // TODO handel the response / or error\n        })\n    }\n}\n","import React from 'react';\nimport Axios from 'axios'\nimport { API_PATH, DATA_BANK } from '../../core.mod/proxy-service/proxy-service';\nimport { Link } from 'react-router-dom';\nimport styles  from './all-diplomas.module.scss'\n\nexport default class AllDiplomas extends React.Component<any> {\n    public state: { [key: string]: string } = {};\n\n    componentDidMount(): void {\n        Axios.get(API_PATH.DIPLOMAS)\n            .then(({data}) => {\n                let courses;\n                if (data) {\n                    courses = data.diplomas.map((diploma: any) => {\n                        return (\n                            <div className='col s12 m4' key={diploma.id}>\n                                <div className='card'>\n                                    <div className={ 'card-image'}>\n                                        <img className={ styles.image} src={DATA_BANK + API_PATH.IMAGE + diploma.imageUrl} alt={diploma.imageUrl}/>\n                                        <span className='card-title'>{diploma.title}</span>\n                                        <Link to={'/edit-diploma/' + diploma.diplomaName}\n                                              className='btn-floating halfway-fab waves-effect waves-light red'><i\n                                            className='material-icons'>folder_open</i></Link>\n                                    </div>\n                                    <div className='card-content'>\n                                        <p>{diploma.shortDescription}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                this.setState({courses})\n            })\n\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h5 className='title'>All Diplomas</h5>\n                </div>\n                <div className='row'>\n                    {this.state.courses}\n                </div>\n            </div>\n        );\n    }\n\n}\n","import Axios from 'axios';\nimport AbstractDiplomaDetails from '../abstract-diploma-details';\nimport { cloneDeep } from 'lodash';\nimport { API_PATH } from '../../core.mod/proxy-service/proxy-service';\nimport { DiplomaInterface } from '../interfaces/diploma-interfaces';\n\ndeclare const M: any;\n\nexport default class EditDiploma extends AbstractDiplomaDetails {\n    public diplomaID: DiplomaInterface['id'] = '';\n\n    componentDidMount(): void {\n        this.setState({\n            saveButtonLabel: 'Update',\n            pageTitle: 'Edit Diploma'\n        });\n        Axios.get<DiplomaInterface>(API_PATH.EDIT_DIPLOMA + (this.props as any).match.params.diplomaName).then(({data}) => {\n            this.diplomaID = data.id;\n            console.log(data);\n            // TODO fix it\n            let formControls = cloneDeep(this.state.formControls);\n            for (const item in data) {\n                if (!!data[item] && typeof data[item] === 'object') {\n                    const subCourseItem = cloneDeep(data[item]);\n                    formControls = {\n                        ...formControls,\n                        [item]: {\n                            ...this.spreadData(formControls[item], subCourseItem)\n                        }\n                    }\n                } else {\n                    for (const control in formControls) {\n                        if (formControls[item] && formControls[item].value !== undefined) {\n                            formControls[item].value = data[item];\n                        }\n                    }\n                }\n            }\n            this.setState({\n                formControls: formControls\n            })\n        });\n    }\n\n\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{}>, snapshot?: any): void {\n        M.updateTextFields();\n    }\n\n\n    public spreadData(formControl: any, nestedData: any): any {\n        for (const nestedItem in nestedData) {\n            if (formControl[nestedItem] && formControl[nestedItem].value !== undefined) {\n                (formControl[nestedItem] as any).value = nestedData[nestedItem];\n            }\n        }\n        return formControl;\n    }\n\n    public saveCourse(): void {\n        if (this.diplomaID) {\n            Axios.put('/api/diploma/' + this.diplomaID, this.mapCourseData()).then((data) => {\n               // TODO handel the response / or error\n            })\n        }\n    }\n\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\nexport default class ErrorPage extends React.Component {\n\n\n    render(): React.ReactNode {\n            return (\n                   <div>\n                       <h1>Something went wrong</h1>\n                       <Link className={'waves-effect waves-light btn'} to={'/'}>GO to Homepage</Link>\n                   </div>\n            );\n    }\n}\n","import React, { Component } from 'react';\n\n\nexport default class Homepage extends Component {\n    public state = {data: null};\n\n    render(): React.ReactNode {\n        return (\n            <div>\n                Welcome to Admin\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport NewCourse from '../courses/new-course/new-course';\nimport { Route, Switch } from 'react-router-dom';\nimport AllCourses from '../courses/all-courses/all-courses';\nimport EditCourse from '../courses/edit-course/edit-course';\nimport NewDiploma from '../diplomas/new-diploma/new-diploma';\nimport AllDiplomas from '../diplomas/all-diplomas/all-diplomas';\nimport EditDiploma from '../diplomas/edit-diploma/edit-diploma';\nimport ErrorPage from '../core.mod/error-handler/error-page';\nimport Homepage from './homepage';\n\n\nexport default class Main extends Component {\n    public state = {data: null};\n\n    render(): React.ReactNode {\n        return (\n            <div>\n                <Switch>\n                    <Route path='/' exact component={Homepage} />\n                    <Route path='/new-course' exact component={NewCourse}/>\n                    <Route path='/all-courses' component={AllCourses}/>\n                    <Route path='/edit-course/:courseName' component={EditCourse}/>\n                    <Route path='/new-diploma' exact component={NewDiploma}/>\n                    <Route path='/all-diplomas' component={AllDiplomas}/>\n                    <Route path='/edit-diploma/:diplomaName' component={EditDiploma}/>\n                    <Route path='/error-page' component={ErrorPage}/>\n                    <Route  component={ErrorPage}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport Main from '../main/main';\nimport Styles from './dashboard.module.scss';\nimport { Link } from 'react-router-dom';\n\ndeclare const M: any;\n\nexport class Dashboard extends React.Component<any> {\n    public state: any;\n\n    componentDidMount(): void {\n        const sidenav = document.querySelectorAll('.sidenav');\n        M.Sidenav.init(sidenav);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<div>\n                <nav className={Styles.teAppMain}>\n                    <div className='nav-wrapper'>\n                        <Link to='/' className='brand-logo'>Logo</Link>\n                        <ul id='nav-mobile' className='right hide-on-med-and-down'>\n                            <li><a href='sass.html'>Sass</a></li>\n                        </ul>\n                    </div>\n                </nav>\n                <ul id='slide-out' className='sidenav sidenav-fixed'>\n                    <li>\n                        <div className='user-view'>\n                            <div className='background'>\n                            </div>\n                            <a href='#email'><span className='white-text email'>jdandturk@gmail.com</span></a>\n                        </div>\n                    </li>\n                    <li><a href='#!'><i className='material-icons'>cloud</i>First Link With Icon</a></li>\n                    <li>\n                        <div className='divider'></div>\n                    </li>\n                    <li><Link to='/new-course'>New Course</Link></li>\n                    <li><Link to='/all-courses'>All Courses</Link></li>\n                    <li><Link to='/new-diploma'>New Diploma</Link></li>\n                    <li><Link to='/all-diplomas'>All Diplomas</Link></li>\n                </ul>\n                <div className={Styles.teAppMain}>\n                    <Main></Main>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Dashboard } from './dashboard/dashboard';\n\nimport './App.scss';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/sass/materialize.scss'\nimport 'materialize-css'\nimport './draft.css';\nimport 'draft-js/dist/Draft.css';\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Dashboard></Dashboard>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'babel-polyfill';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport Axios from 'axios';\n\nAxios.defaults.baseURL = 'http://localhost:3000'; // or instance\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}